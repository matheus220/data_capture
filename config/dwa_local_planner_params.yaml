# === DWAPlannerROS
# =================
DWAPlannerROS:
  #
  # Robot Configuration Parameters
  #
  max_vel_x: 1.0
  min_vel_x: -1.0
  #
  max_vel_y: 0.0
  min_vel_y: 0.0
  #
  # The velocity when robot is moving in a straight line
  #
  # Warning!
  # do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  # are non-negligible and small in place rotational velocities will be created.
  max_trans_vel: 1.0
  min_trans_vel: 0.1
  #
  max_rot_vel: 1.0
  min_rot_vel: 0.2
  #rot_stopped_vel: 0.1
  #trans_stopped_vel: 0.1
  #
  acc_lim_x: 5.0
  acc_lim_y: 0.0
  acc_lim_theta: 5.0
  acc_limit_trans: 2.0
  #
  # Goal Tolerance Parametes
  #
  xy_goal_tolerance: 0.1
  yaw_goal_tolerance: 0.1
  latch_xy_goal_tolerance: false
  #
  # Forward Simulation Parameters
  #
  sim_time: 1.2
  vx_samples: 25
  vy_samples: 0
  vth_samples: 50
  #controller_frequency: 10.0
  #
  # Trajectory Scoring Parameters
  #
  # The weighting for how much the controller should stay close to the path it was given
  # ((default: 32.0))
  path_distance_bias: 32.0
  # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  # ((default: 24.0))
  goal_distance_bias: 24.0
  # The weighting for how much the controller should attempt to avoid obstacles
  # ((default: 0.01))
  occdist_scale: 0.01
  # The distance from the center point of the robot to place an additional scoring point, in meters
  # ((default: 0.325))
  forward_point_distance: 0.325
  # The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid in seconds
  # ((default: 0.2))
  stop_time_buffer: 0.2
  # The absolute value of the velocity at which to start scaling the robot's footprint, in m/s
  # ((default: 0.25))
  scaling_speed: 0.25
  # The maximum factor to scale the robot's footprint by
  # ((default: 0.2))
  max_scaling_factor: 0.2
  #angular_sim_granularity: 0.1
  #sim_granularity: 0.025
  #twirling_scale: 0.0
  #
  # Oscillation Prevention Parameters
  #
  # How far the robot must travel in meters before oscillation flags are reset
  # ((default: 0.05))
  oscillation_reset_dist: 0.05
  #
  # Debugging
  #
  publish_traj_pc : true
  publish_cost_grid_pc: true
  #restore_defaults: false
  #
  # Others
  #
  # Defines whether or not to eat up the plan as the robot moves along the path. If set to true, points will fall off
  # the end of the plan once the robot moves 1 meter past them.
  # ((default: true))
  #prune_plan: false
  #
  #use_dwa: true
